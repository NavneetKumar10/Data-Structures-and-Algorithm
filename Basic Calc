import java.util.Stack;

class Solution {
    public int calculate(String s) {
        Stack<Integer> stack = new Stack<>(); 
        int operand = 0;
        int result = 0;
        int sign = 1; // 1 represents positive sign, -1 represents negative sign

        for (char c : s.toCharArray()) {
            if (Character.isDigit(c)) {
                operand = operand * 10 + (c - '0');
            } else if (c == '+') {
                result += sign * operand;
                operand = 0;
                sign = 1;
            } else if (c == '-') {
                result += sign * operand;
                operand = 0;
                sign = -1;
            } else if (c == '(') {
                stack.push(result);
                stack.push(sign);
                result = 0;
                sign = 1;
            } else if (c == ')') {
                result += sign * operand;
                result *= stack.pop(); // pop the sign
                result += stack.pop(); // pop the result outside the parenthesis
                operand = 0;
            }
        }

        return result + (sign * operand);
    }
}
